version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc -w 2 localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "2181:2181"
    networks: [ shopnet ]

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      zookeeper: { condition: service_healthy }
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 20
    ports: [ "9092:9092" ]
    networks: [ shopnet ]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: shop
      POSTGRES_PASSWORD: shop
      POSTGRES_DB: shopdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shop -d shopdb"]
      interval: 10s
      timeout: 5s
      retries: 20
    ports: [ "5432:5432" ]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks: [ shopnet ]

  redis:
    image: redis:7
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports: [ "6379:6379" ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [ shopnet ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports: [ "9200:9200" ]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    networks: [ shopnet ]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    depends_on:
      elasticsearch: { condition: service_healthy }
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports: [ "5601:5601" ]
    networks: [ shopnet ]

networks:
  shopnet: {}

volumes:
  pgdata: {}
